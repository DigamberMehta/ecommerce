
    <nav class="navbar">
        <div class="logo-container">
            <a href="/home" class="logo">ShopLogo</a>
        </div>

        <div class="search-bar">
            <form id="search-form" action="/search" method="GET">
                <input type="text" name="q" id="search-input" placeholder="Search products..." autocomplete="off" />
                <i class="fa-regular fa-magnifying-glass search-icon" onclick="document.getElementById('search-form').submit();"></i>
            </form>
            <div id="suggestions" class="suggestions-box"></div>
        </div>

        <div class="nav-right">
            <div class="dropdown">
                <button class="tooltip" id="profileButton">
                    <div class="profile">
                        <p style="margin: 0; padding: 0;">Hello</p>
                        <p style="margin: 0; padding: 0;" id="username"><%= currentUser ? currentUser.username : "Login" %></p>
                    </div>
                    <% if (!currentUser) { %>
                        <a href="/login" class="tooltiptext" id="tooltipText">Sign In</a>
                    <% } %>
                </button>
                <div class="dropdown-content">
                    <% if (!currentUser) { %>
                        <a href="/login">
                            <div class="top-section" id="topSection">Sign In</div>
                        </a>
                    <% } %>
                    <div class="content">
                        <div class="left"></div>
                        <div class="right">
                            <ul class="dropdown-list" id="dropdownList">
                                <li><a href="#">Home</a></li>
                                <li><a href="#">About</a></li>
                                <li><a href="#">Services</a></li>
                                <li><a href="#">Products</a></li>
                                <% if (currentUser) { %>
                                    <li id="signoutOption"><a href="/logout">Sign out</a></li>
                                <% } %>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <div class="menu-list">
                <div class="order-button">Your Order</div>
                <div class="cart-button"><i class="fa-thin fa-cart-shopping"></i>Cart</div>
            </div>
        </div>
    </nav>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('search-input');
    const suggestionsBox = document.getElementById('suggestions');
    const MIN_CHARACTERS = 3; // Minimum number of characters before showing suggestions

    searchInput.addEventListener('input', async () => {
        const query = searchInput.value.trim();
        console.log(`Search query: ${query}`); // Debugging: log the search query

        if (query.length < MIN_CHARACTERS) {
            suggestionsBox.innerHTML = '';
            suggestionsBox.style.display = 'none';
            return;
        }

        try {
            const response = await fetch(`/search?q=${encodeURIComponent(query)}&suggestions=true`);
            const suggestions = await response.json();
            console.log('Suggestions received:', suggestions); // Debugging: log the received suggestions

            if (suggestions.length === 0) {
                suggestionsBox.innerHTML = '<p>No suggestions found.</p>';
                suggestionsBox.style.display = 'block';
                return;
            }

            suggestionsBox.innerHTML = suggestions.map(suggestion => `
                <a href="/products/${suggestion._id}/${suggestion.slug}" class="suggestion-item">
                    <div class="suggestion-content">
                        <img src="${suggestion.images[0]}" alt="${suggestion.title}" class="suggestion-image">
                        <div class="suggestion-details">
                            <div class="suggestion-title">${suggestion.title}</div>
                            <div class="suggestion-price">$${suggestion.sellingPrice.toFixed(2)}</div>
                        </div>
                    </div>
                </a>
            `).join('');
            suggestionsBox.style.display = 'block';
        } catch (error) {
            console.error('Error fetching suggestions:', error);
            // suggestionsBox.innerHTML = '<p>Error fetching suggestions.</p>';
            // suggestionsBox.style.display = 'block';
        }
    });

    document.addEventListener('click', (event) => {
        if (!event.target.closest('.search-bar')) {
            suggestionsBox.style.display = 'none';
        }
    });
});

    </script>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const currentUser = <%= JSON.stringify(currentUser || null) %>;
            const profileButton = document.getElementById('profileButton');

            if (!currentUser) {
                const tooltipText = document.getElementById('tooltipText');
                tooltipText.style.visibility = 'visible';
                tooltipText.style.opacity = '1';
                tooltipText.classList.add('shake'); // Add shake class to tooltip text
                setTimeout(() => {
                    tooltipText.classList.remove('shake'); // Remove shake class after 2 seconds
                    tooltipText.style.visibility = 'hidden';
                    tooltipText.style.opacity = '0';
                }, 2000); // 2 seconds
            }

            const dropdown = document.querySelector('.navbar .dropdown');
            const dropdownContent = dropdown.querySelector('.dropdown-content');

            let timeout;

            // Function to show the dropdown content
            function showDropdown() {
                clearTimeout(timeout);
                dropdownContent.style.display = 'block';
                dropdownContent.style.opacity = '1';
                dropdownContent.style.visibility = 'visible';
            }

            // Function to hide the dropdown content with delay
            function hideDropdown() {
                timeout = setTimeout(() => {
                    dropdownContent.style.opacity = '0';
                    dropdownContent.style.visibility = 'hidden';
                    // Hide content after the opacity transition completes
                    dropdownContent.addEventListener('transitionend', () => {
                        if (dropdownContent.style.opacity === '0') {
                            dropdownContent.style.display = 'none'; // Corrected from 'hidden'
                        }
                    }, { once: true });
                }, 300); // Delay in milliseconds (0.3 seconds)
            }

            dropdown.addEventListener('mouseenter', showDropdown);
            dropdown.addEventListener('mouseleave', hideDropdown);

            // Ensure the dropdown content remains visible while interacting with it
            dropdownContent.addEventListener('mouseenter', () => {
                clearTimeout(timeout);
                dropdownContent.style.opacity = '1';
                dropdownContent.style.visibility = 'visible';
            });

            dropdownContent.addEventListener('mouseleave', hideDropdown);
        });
    </script>
