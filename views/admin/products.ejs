<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      data-purpose="Layout StyleSheet"
      title="Web Awesome"
      href="/css/app-wa-d53d10572a0e0d37cb8d614a3f177a0c.css?vsn=d"
    />
    <link
      rel="stylesheet"
      data-purpose="Layout StyleSheet"
      title="Web Awesome"
      href="/css/app-wa-54e7be3a62ca9b7580d7f8c669f59e74.css?vsn=d"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/all.css"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/sharp-duotone-solid.css"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/sharp-thin.css"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/sharp-solid.css"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/sharp-regular.css"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/sharp-light.css"
    />
    <title>Product Dashboard</title>
    <style>
      .admin-panel-product-listing {
        margin: 0;
        font-family: "Arial", sans-serif;
        display: flex;
        justify-content: end;
        background-color: #f8f9fa;
      }

      .container {
        width: 80%;
        padding: 20px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
      }

      header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
      }

      header h1 {
        margin: 0;
        font-size: 24px;
        color: #333;
      }

      .btn-add-product {
        background-color: #ffffff;
        color: #212121;
        border: 1px solid rgba(48, 229, 252, 0.5);
        color: rgb(0, 0, 0);
        padding: 10px 20px;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s;
      }

      .btn-add-product:hover {
        background-color: #10d6f2;
        box-shadow: 0 17px 24px 0 transparent,
          0 5px 12px 0 rgba(48, 229, 252, 0.5);
          color: white;
      }

      .view-toggle {
        display: inline-flex;
        margin-left: 20px;
      }

      .view-toggle button {
        background-color: #ffffff;
        color: #212121;

        border: 1px solid rgba(48, 229, 252, 0.5);
        padding: 6px 20px;
        cursor: pointer;
        border-radius: 4px;
        margin-left: 10px;
        transition: background-color 0.3s;
      }

      .view-toggle button:hover {
        background-color: #10d6f2;
        box-shadow: 0 17px 24px 0 transparent,
          0 5px 12px 0 rgba(48, 229, 252, 0.5);
          color: white;
      }

      .search-bar {
        margin-bottom: 20px;
      }

      .search-bar input {
        width: 100%;
        padding: 10px;
        box-sizing: border-box;
        border: 1px solid #ddd;
        border-radius: 4px;
      }

      .product-table {
        width: 100%;
        border-collapse: collapse;
      }

      .product-table th,
      .product-table td {
        padding: 10px;
        text-align: left;
        position: relative;
      }
      .product-table td {
        cursor: pointer;
      }

      .product-table th {
        color: #333;
        cursor: default;
      }

      .product-table img {
        width: 50px;
        height: auto;
        border-radius: 4px;
      }

      .product-table tr {
        transition: transform 0.3s ease-in-out;
      }

      .product-table tr:hover {
        transform: scale(1.02);
      }

      .product-grid {
        display: none;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 20px;
      }

      .product-card {
        position: relative;
        border: 1px solid #ddd;
        padding: 20px;
        text-align: center;
        background-color: #fff;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s;
      }

      .product-card:hover {
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
      }

      .product-card img {
        width: 100px;
        height: auto;
        margin-bottom: 10px;
      }

      .product-card h2 {
        font-size: 18px;
        margin: 10px 0;
        color: #333;
      }

      .product-card .product-info {
        display: flex;
        justify-content: space-between;
        margin: 5px 0;
        color: #666;
        text-align: left;
      }

      .product-card .product-info span {
        flex: 1;
      }

      .product-card .product-info .label {
        text-align: right;
        padding-right: 10px;
      }

      .product-card .product-info .value {
        text-align: left;
        padding-left: 10px;
      }

      .product-card .product-actions {
        display: none;
        position: absolute;
        top: 10px;
        right: 10px;
      }

      .product-card:hover .product-actions {
        display: flex;
        gap: 10px;
      }

      .action-icon {
        cursor: pointer;
        font-size: 18px;
      }

      .edit-icon:hover {
        color: #007bff;
      }
      .delete-icon:hover {
        color: red;
      }

      @media (max-width: 868px) {
        .container {
          min-width: 90%;
        }
      }

      @media (max-width: 868px) {
        .product-table th:nth-child(2),
        .product-table td:nth-child(2),
        .product-table th:nth-child(4),
        .product-table td:nth-child(4) {
          display: none;
        }
      }

      @media (max-width: 600px) {
        .product-table th:nth-child(2),
        .product-table td:nth-child(2),
        .product-table th:nth-child(4),
        .product-table td:nth-child(4),
        .product-table th:nth-child(5),
        .product-table td:nth-child(5) {
          display: none;
        }
      }

      /* Modal styles */
      .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.6);
      }

      .close {
        color: #aaa;
        float: right;
        font-size: 24px;
        font-weight: bold;
      }

      .close:hover,
      .close:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
      }

      h2 {
        text-align: center;
        margin-bottom: 20px;
        font-family: "Arial", sans-serif;
        color: #333;
      }

      .form-group {
        margin-bottom: 15px;
      }

      .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
        font-family: "Arial", sans-serif;
        color: #555;
      }

      .form-group input,
      .form-group textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-family: "Arial", sans-serif;
      }

      .form-group textarea {
        resize: vertical;
      }

      .submit-btn {
        display: inline-block;
        background-color: #4caf50;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        font-family: "Arial", sans-serif;
        margin-top: 10px;
      }

      .submit-btn:hover {
        background-color: #45a049;
      }

      button[type="button"] {
        background-color: #5bc0de;
        color: white;
        padding: 5px 10px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        margin-top: 10px;
      }

      button[type="button"]:hover {
        background-color: #31b0d5;
      }

      .loading {
        pointer-events: none;
        opacity: 0.7;
        position: relative;
      }

      .loading-spinner {
        border: 2px solid #f3f3f3;
        border-top: 2px solid #3498db;
        border-radius: 50%;
        width: 16px;
        height: 16px;
        animation: spin 1s linear infinite;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }

      @keyframes spin {
        0% {
          transform: translate(-50%, -50%) rotate(0deg);
        }
        100% {
          transform: translate(-50%, -50%) rotate(360deg);
        }
      }
      .modal-content {
        background-color: #fff;
        margin: 1rem auto;
        padding: 40px;
        border-radius: 8px;
        width: 50%;
        /* height: 100vh; */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      }

      @media (max-width: 1204px) {
        .modal-content {
          background-color: #fff;
          margin: 1rem auto;
          padding: 40px;
          border-radius: 8px;
          min-width: 70%;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
      }

      @media (max-width: 900px) {
        .modal-content {
          background-color: #fff;
          margin: 1rem auto;
          padding: 40px;
          border-radius: 8px;
          min-width: 80%;
          box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
      }
      @media (max-width: 768px) {
        .modal-content {
          background-color: #fff;
          margin: 1rem auto;
          /* padding: 40px; */

          width: 90%;
        }
      }
      div::-webkit-scrollbar {
        display: none;
      }

      #categoriesWrapper input {
        width: 28% !important;
        /* display: flex; */
        margin-bottom: 0.5rem;
        margin-right: 0.8rem;
        /* flex-direction: row; */
      }
      #tagsWrapper input {
        width: 28% !important;
        /* display: flex; */
        margin-bottom: 0.5rem;
        margin-right: 0.8rem;
        /* flex-direction: row; */
      }
      .admin-panel-half-container {
        display: flex;
        justify-content: space-between;
      }
      #product-form-halfsection {
        width: 48%;
      }
      @media (max-width: 600px) {
        #categoriesWrapper input {
        }
      }
    </style>
  </head>
  <body>
    <div class="admin-panel-product-listing">
      <div class="container">
        <header>
          <h1>Products</h1>
          <div>
            <button class="btn-add-product">Add Product</button>
            <div class="view-toggle">
              <button id="list-view-btn">
                <i class="fa-regular fa-list"></i> List
              </button>
              <button id="grid-view-btn">
                <i class="fa-solid fa-grid"></i> Grid
              </button>
            </div>
          </div>
        </header>
        <div class="search-bar">
          <input type="text" id="searchInput" placeholder="Search..." />
        </div>
        <table class="product-table" id="product-list-view">
          <thead>
            <tr>
              <th>Image</th>
              <th>Category</th>
              <th>Name</th>
              <th>Brand</th>
              <th>Stock</th>
              <th>Price</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="productListBody">
            <% products.forEach(product => { %>
            <tr data-id="<%= product._id %>" data-slug="<%= product.slug %>">
              <td><img src="<%= product.images[0] %>" alt="Product" /></td>
              <td><%= product.categories[0] %></td>
              <td><%= product.title %></td>
              <td><%= product.brand %></td>
              <td><%= product.stock %></td>
              <td>₹<%= product.sellingPrice %></td>
              <td>
                <div class="product-actions">
                  <span
                    style="margin-right: 0.7rem"
                    class="action-icon delete-icon"
                    data-id="<%= product._id %>"
                    ><i class="fa-regular fa-trash"></i
                  ></span>
                  <span
                    class="action-icon edit-icon"
                    data-id="<%= product._id %>"
                    ><i class="fa-sharp fa-regular fa-pen-to-square"></i
                  ></span>
                </div>
              </td>
            </tr>
            <% }) %>
          </tbody>
        </table>
        <div class="product-grid" id="product-grid-view">
          <% products.forEach(product => { %>
          <div
            class="product-card"
            data-id="<%= product._id %>"
            data-slug="<%= product.slug %>"
          >
            <img src="<%= product.images[0] %>" alt="Product" />
            <h2><%= product.title %></h2>
            <div class="product-info product-category">
              <span class="label">Category:</span>
              <span class="value"><%= product.categories[0] %></span>
            </div>
            <div class="product-info product-brand">
              <span class="label">Brand:</span>
              <span class="value"><%= product.brand %></span>
            </div>
            <div class="product-info product-stock">
              <span class="label">Stock:</span>
              <span class="value"><%= product.stock %></span>
            </div>
            <div class="product-info product-price">
              <span class="label">Price:</span>
              <span class="value">₹<%= product.sellingPrice %></span>
            </div>
            <div class="product-actions">
              <span class="action-icon delete-icon" data-id="<%= product._id %>"
                ><i class="fa-regular fa-trash"></i
              ></span>
              <span class="action-icon edit-icon" data-id="<%= product._id %>"
                ><i class="fa-sharp fa-regular fa-pen-to-square"></i
              ></span>
            </div>
          </div>
          <% }) %>
        </div>
      </div>
    </div>

    <!-- Add Product Modal -->
    <div id="addProductModal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Add Product</h2>
        <form
          id="addProductForm"
          enctype="multipart/form-data"
          action="/admin/add/product"
          method="POST"
        >
          <div class="form-group">
            <label for="title">Title</label>
            <input type="text" id="title" name="title" required />
          </div>
          <div class="form-group">
            <label for="description">Description</label>
            <textarea id="description" name="description"></textarea>
          </div>
          <div class="admin-panel-half-container">
            <div class="form-group" id="product-form-halfsection">
              <label for="sellingPrice">Selling Price</label>
              <input
                type="number"
                id="sellingPrice"
                name="sellingPrice"
                required
              />
            </div>
            <div class="form-group" id="product-form-halfsection">
              <label for="mrpPrice">MRP Price</label>
              <input type="number" id="mrpPrice" name="mrpPrice" />
            </div>
          </div>
          <div class="form-group">
            <label for="categories">Categories</label>
            <div id="categoriesWrapper">
              <input type="text" name="categories" required />
            </div>
            <button type="button" id="addCategoryBtn">Add more Category</button>
          </div>
          <div class="admin-panel-half-container">
            <div class="form-group" id="product-form-halfsection">
              <label for="brand">Brand</label>
              <input type="text" id="brand" name="brand" />
            </div>
            <div class="form-group" id="product-form-halfsection">
              <label for="stock">Stock</label>
              <input type="number" id="stock" name="stock" />
            </div>
          </div>
          <div class="admin-panel-half-container">
            <div class="form-group" id="product-form-halfsection">
              <label for="images">Images</label>
              <input type="file" id="images" name="images" multiple />
            </div>
            <div class="form-group" id="product-form-halfsection">
              <label for="additionalImages">Additional Images</label>
              <input
                type="file"
                id="additionalImages"
                name="additionalImages"
                multiple
              />
            </div>
          </div>
          <div class="form-group">
            <label for="tags">Tags</label>
            <div id="tagsWrapper">
              <input type="text" name="tags" />
            </div>
            <button type="button" id="addTagBtn">Add more Tag</button>
          </div>
          <button type="submit" class="submit-btn">Add Product</button>
        </form>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const categoriesWrapper = document.getElementById("categoriesWrapper");
        const addCategoryBtn = document.getElementById("addCategoryBtn");
        const tagsWrapper = document.getElementById("tagsWrapper");
        const addTagBtn = document.getElementById("addTagBtn");
        const submitButton = document.querySelector(
          '#addProductForm button[type="submit"]'
        );
        const searchInput = document.getElementById("searchInput");
        const productListBody = document.getElementById("productListBody");
        const productGridView = document.getElementById("product-grid-view");

        // Add a new category input field
        addCategoryBtn.addEventListener("click", function () {
          const newCategoryInput = document.createElement("input");
          newCategoryInput.type = "text";
          newCategoryInput.name = "categories";
          categoriesWrapper.appendChild(newCategoryInput);
        });

        // Add a new tag input field
        addTagBtn.addEventListener("click", function () {
          const newTagInput = document.createElement("input");
          newTagInput.type = "text";
          newTagInput.name = "tags";
          tagsWrapper.appendChild(newTagInput);
        });

        // Modal functionality
        const modal = document.getElementById("addProductModal");
        const btn = document.querySelector(".btn-add-product");
        const span = document.getElementsByClassName("close")[0];

        btn.onclick = function () {
          modal.style.display = "block";
        };

        span.onclick = function () {
          modal.style.display = "none";
        };

        window.onclick = function (event) {
          if (event.target == modal) {
            modal.style.display = "none";
          }
        };

        // Handle form submission
        document
          .getElementById("addProductForm")
          .addEventListener("submit", async function (event) {
            event.preventDefault();
            const formData = new FormData(this);
            const title = formData.get("title");
            const slug = title
              .toLowerCase()
              .replace(/ /g, "-")
              .replace(/[^\w-]+/g, "");
            formData.append("slug", slug);

            const categories = Array.from(
              categoriesWrapper.querySelectorAll('input[name="categories"]')
            ).map((input) => input.value);
            const tags = Array.from(
              tagsWrapper.querySelectorAll('input[name="tags"]')
            ).map((input) => input.value);

            formData.delete("categories");
            formData.delete("tags");
            formData.append("categories", categories.join(","));
            formData.append("tags", tags.join(","));

            // Add loading class and spinner to button
            submitButton.classList.add("loading");
            submitButton.disabled = true;

            const spinner = document.createElement("div");
            spinner.classList.add("loading-spinner");
            submitButton.appendChild(spinner);

            try {
              const response = await fetch("/admin/add/product", {
                method: "POST",
                body: formData,
              });
              if (!response.ok) {
                throw new Error("Network response was not ok");
              }
              const data = await response.json();
              if (response.status === 201) {
                submitButton.textContent = "Product Added";
                setTimeout(() => {
                  location.reload();
                }, 2000); // Optional: delay to show the success message
              } else {
                alert(data.message);
              }
            } catch (err) {
              console.error(err);
              alert("An error occurred while adding the product.");
            } finally {
              // Remove loading class, spinner and enable button
              submitButton.classList.remove("loading");
              submitButton.disabled = false;
              submitButton.removeChild(spinner);
            }
          });

        // Handle view switching
        document
          .getElementById("list-view-btn")
          .addEventListener("click", function () {
            document.getElementById("product-list-view").style.display =
              "table";
            document.getElementById("product-grid-view").style.display = "none";
          });

        document
          .getElementById("grid-view-btn")
          .addEventListener("click", function () {
            document.getElementById("product-list-view").style.display = "none";
            document.getElementById("product-grid-view").style.display = "grid";
          });

        // Handle product row clicks
        document.querySelectorAll(".product-table tr").forEach((row) => {
          row.addEventListener("click", function () {
            const productId = this.getAttribute("data-id");
            const productSlug = this.getAttribute("data-slug");
            window.location.href = `/admin/preview/${productId}/${productSlug}`;
          });
        });

        // Handle product card clicks
        document.querySelectorAll(".product-card").forEach((card) => {
          card.addEventListener("click", function () {
            const productId = this.getAttribute("data-id");
            const productSlug = this.getAttribute("data-slug");
            window.location.href = `/admin/preview/${productId}/${productSlug}`;
          });
        });

        // Handle product deletion
        document.querySelectorAll(".delete-icon").forEach((icon) => {
          icon.addEventListener("click", async function (event) {
            event.stopPropagation();
            const productId = this.getAttribute("data-id");
            const confirmDelete = confirm(
              "Are you sure you want to delete this product?"
            );
            if (confirmDelete) {
              try {
                const response = await fetch(`/admin/products/${productId}`, {
                  method: "DELETE",
                  headers: {
                    "Content-Type": "application/json",
                  },
                });
                const data = await response.json();
                if (response.status === 200) {
                  location.reload();
                } else {
                  alert(data.message);
                }
              } catch (err) {
                console.error(err);
                alert("An error occurred while deleting the product.");
              }
            }
          });
        });

        // Handle search input
        searchInput.addEventListener("input", async function () {
          const searchTerm = this.value;

          try {
            const response = await fetch(
              `/admin/products/search?q=${searchTerm}`
            );
            const products = await response.json();

            // Update list view
            productListBody.innerHTML = products
              .map(
                (product) => `
            <tr data-id="${product._id}" data-slug="${product.slug}">
              <td><img src="${product.images[0]}" alt="Product"></td>
              <td>${product.categories[0]}</td>
              <td>${product.title}</td>
              <td>${product.brand}</td>
              <td>${product.stock}</td>
              <td>$${product.sellingPrice}</td>
              <td>
                <div class="product-actions">
                  <span style="margin-right: 0.7rem;" class="action-icon delete-icon" data-id="${product._id}"><i class="fa-regular fa-trash"></i></span>
                  <span class="action-icon edit-icon" data-id="${product._id}"><i class="fa-sharp fa-regular fa-pen-to-square"></i></span>
                </div>
              </td>
            </tr>
          `
              )
              .join("");

            // Update grid view
            productGridView.innerHTML = products
              .map(
                (product) => `
            <div class="product-card" data-id="${product._id}" data-slug="${product.slug}">
              <img src="${product.images[0]}" alt="Product">
              <h2>${product.title}</h2>
              <div class="product-info product-category">
                <span class="label">Category:</span> <span class="value">${product.categories[0]}</span>
              </div>
              <div class="product-info product-brand">
                <span class="label">Brand:</span> <span class="value">${product.brand}</span>
              </div>
              <div class="product-info product-stock">
                <span class="label">Stock:</span> <span class="value">${product.stock}</span>
              </div>
              <div class="product-info product-price">
                <span class="label">Price:</span> <span class="value">$${product.sellingPrice}</span>
              </div>
              <div class="product-actions">
                <span class="action-icon delete-icon" data-id="${product._id}"><i class="fa-regular fa-trash"></i></span>
                <span class="action-icon edit-icon" data-id="${product._id}"><i class="fa-sharp fa-regular fa-pen-to-square"></i></span>
              </div>
            </div>
          `
              )
              .join("");
          } catch (err) {
            console.error(err);
          }
        });
      });
      document.addEventListener("DOMContentLoaded", function () {
        const tableHeadings = document.querySelectorAll(".product-table th");
        tableHeadings.forEach((th) => {
          th.addEventListener("click", function (event) {
            event.preventDefault(); // Prevents default behavior
            event.stopPropagation(); // Stops the event from bubbling up
          });
        });
      });
    </script>
  </body>
</html>
