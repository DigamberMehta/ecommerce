<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      data-purpose="Layout StyleSheet"
      title="Web Awesome"
      href="/css/app-wa-d53d10572a0e0d37cb8d614a3f177a0c.css?vsn=d"
    />
    <link
      rel="stylesheet"
      data-purpose="Layout StyleSheet"
      title="Web Awesome"
      href="/css/app-wa-54e7be3a62ca9b7580d7f8c669f59e74.css?vsn=d"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/all.css"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/sharp-duotone-solid.css"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/sharp-thin.css"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/sharp-solid.css"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/sharp-regular.css"
    />
    <link
      rel="stylesheet"
      href="https://site-assets.fontawesome.com/releases/v6.6.0/css/sharp-light.css"
    />
    <link rel="stylesheet" href="/css/adminProduct.css">
    <title>Product Dashboard</title>
  
  </head>
  <body>
    <div class="admin-panel-product-listing">
      <div class="container">
        <header>
          <h1>Products</h1>
          <div>
            <button class="btn-add-product">Add Product</button>
            <div class="view-toggle">
              <button id="list-view-btn">
                <i class="fa-regular fa-list"></i> List
              </button>
              <button id="grid-view-btn">
                <i class="fa-solid fa-grid"></i> Grid
              </button>
            </div>
          </div>
        </header>
        <div class="search-bar">
          <input type="text" id="searchInput" placeholder="Search..." />
        </div>
        <table class="product-table" id="product-list-view">
          <thead>
            <tr>
              <th>Image</th>
              <th>Category</th>
              <th>Name</th>
              <th>Brand</th>
              <th>Stock</th>
              <th>Price</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody id="productListBody">
            <% products.forEach(product => { %>
            <tr data-id="<%= product._id %>" data-slug="<%= product.slug %>">
              <td><img src="<%= product.images[0] %>" alt="Product" /></td>
              <td><%= product.categories[0] %></td>
              <td><%= product.title %></td>
              <td><%= product.brand %></td>
              <td><%= product.stock %></td>
              <td>₹<%= product.sellingPrice %></td>
              <td>
                <div class="product-actions">
                  <span
                    style="margin-right: 0.7rem"
                    class="action-icon delete-icon"
                    data-id="<%= product._id %>"
                    ><i class="fa-regular fa-trash"></i
                  ></span>
                  <span
                    class="action-icon edit-icon"
                    data-id="<%= product._id %>"
                    ><i class="fa-sharp fa-regular fa-pen-to-square"></i
                  ></span>
                </div>
              </td>
            </tr>
            <% }) %>
          </tbody>
        </table>
        <div class="product-grid" id="product-grid-view">
          <% products.forEach(product => { %>
          <div
            class="product-card"
            data-id="<%= product._id %>"
            data-slug="<%= product.slug %>"
          >
            <img src="<%= product.images[0] %>" alt="Product" />
            <h2><%= product.title %></h2>
            <div class="product-info product-category">
              <span class="label">Category:</span>
              <span class="value"><%= product.categories[0] %></span>
            </div>
            <div class="product-info product-brand">
              <span class="label">Brand:</span>
              <span class="value"><%= product.brand %></span>
            </div>
            <div class="product-info product-stock">
              <span class="label">Stock:</span>
              <span class="value"><%= product.stock %></span>
            </div>
            <div class="product-info product-price">
              <span class="label">Price:</span>
              <span class="value">₹<%= product.sellingPrice %></span>
            </div>
            <div class="product-actions">
              <span class="action-icon delete-icon" data-id="<%= product._id %>"
                ><i class="fa-regular fa-trash"></i
              ></span>
              <span class="action-icon edit-icon" data-id="<%= product._id %>"
                ><i class="fa-sharp fa-regular fa-pen-to-square"></i
              ></span>
            </div>
          </div>
          <% }) %>
        </div>
      </div>
    </div>

    <!-- Add Product Modal -->
    <div id="addProductModal" class="modal">
      <div class="modal-content">
        <span class="close">&times;</span>
        <h2>Add Product</h2>
        <form
          id="addProductForm"
          enctype="multipart/form-data"
          action="/admin/add/product"
          method="POST"
        >
          <div class="form-group">
            <label for="title">Title</label>
            <input type="text" id="title" name="title" required />
          </div>
          <div class="form-group">
            <label for="description">Description</label>
            <textarea id="description" name="description"></textarea>
          </div>
          <div class="admin-panel-half-container">
            <div class="form-group" id="product-form-halfsection">
              <label for="sellingPrice">Selling Price</label>
              <input
                type="number"
                id="sellingPrice"
                name="sellingPrice"
                required
              />
            </div>
            <div class="form-group" id="product-form-halfsection">
              <label for="mrpPrice">MRP Price</label>
              <input type="number" id="mrpPrice" name="mrpPrice" />
            </div>
          </div>
          <div class="form-group">
            <label for="categories">Categories</label>
            <div id="categoriesWrapper">
              <input type="text" name="categories" required />
            </div>
            <button type="button" id="addCategoryBtn">Add more Category</button>
          </div>
          <div class="admin-panel-half-container">
            <div class="form-group" id="product-form-halfsection">
              <label for="brand">Brand</label>
              <input type="text" id="brand" name="brand" />
            </div>
            <div class="form-group" id="product-form-halfsection">
              <label for="stock">Stock</label>
              <input type="number" id="stock" name="stock" />
            </div>
          </div>
          <div class="admin-panel-half-container">
            <div class="form-group" id="product-form-halfsection">
              <label for="images">Images</label>
              <input type="file" id="images" name="images" multiple />
            </div>
            <div class="form-group" id="product-form-halfsection">
              <label for="additionalImages">Additional Images</label>
              <input
                type="file"
                id="additionalImages"
                name="additionalImages"
                multiple
              />
            </div>
          </div>
          <div class="form-group">
            <label for="tags">Tags</label>
            <div id="tagsWrapper">
              <input type="text" name="tags" />
            </div>
            <button type="button" id="addTagBtn">Add more Tag</button>
          </div>
          <button type="submit" class="submit-btn">
            <span class="button-text">Add Product</span>
          </button>
          
        </form>
      </div>
    </div>

    <script>
document.addEventListener("DOMContentLoaded", function () {
  const categoriesWrapper = document.getElementById("categoriesWrapper");
  const addCategoryBtn = document.getElementById("addCategoryBtn");
  const tagsWrapper = document.getElementById("tagsWrapper");
  const addTagBtn = document.getElementById("addTagBtn");
  const submitButton = document.querySelector('#addProductForm button[type="submit"]');
  const searchInput = document.getElementById("searchInput");
  const productListBody = document.getElementById("productListBody");
  const productGridView = document.getElementById("product-grid-view");

  // Add a new category input field
  addCategoryBtn.addEventListener("click", function () {
    const newCategoryInput = document.createElement("input");
    newCategoryInput.type = "text";
    newCategoryInput.name = "categories";
    categoriesWrapper.appendChild(newCategoryInput);
  });

  // Add a new tag input field
  addTagBtn.addEventListener("click", function () {
    const newTagInput = document.createElement("input");
    newTagInput.type = "text";
    newTagInput.name = "tags";
    tagsWrapper.appendChild(newTagInput);
  });

  // Modal functionality
  const modal = document.getElementById("addProductModal");
  const btn = document.querySelector(".btn-add-product");
  const span = document.getElementsByClassName("close")[0];

  btn.onclick = function () {
    modal.style.display = "block";
  };

  span.onclick = function () {
    modal.style.display = "none";
  };

  window.onclick = function (event) {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  };

  // Handle form submission
  document.getElementById("addProductForm").addEventListener("submit", async function (event) {
  event.preventDefault();
  const formData = new FormData(this);
  const title = formData.get("title");
  const slug = title.toLowerCase().replace(/ /g, "-").replace(/[^\w-]+/g, "");
  formData.append("slug", slug);

  const categories = Array.from(categoriesWrapper.querySelectorAll('input[name="categories"]')).map((input) => input.value);
  const tags = Array.from(tagsWrapper.querySelectorAll('input[name="tags"]')).map((input) => input.value);

  formData.delete("categories");
  formData.delete("tags");
  formData.append("categories", categories.join(","));
  formData.append("tags", tags.join(","));

  // Add loading class and spinner to button
  submitButton.classList.add("loading");
  submitButton.disabled = true;

  const spinner = document.createElement("div");
  spinner.classList.add("loading-spinner");
  submitButton.appendChild(spinner);

  try {
    const response = await fetch("/admin/add/product", {
      method: "POST",
      body: formData,
    });
    if (!response.ok) {
      throw new Error("Network response was not ok");
    }
    const data = await response.json();
    if (response.status === 201) {
      submitButton.textContent = "Product Added";
      setTimeout(() => {
        location.reload();
      }, 2000); // Optional: delay to show the success message
    } else {
      alert(data.message);
    }
  } catch (err) {
    console.error(err);
    alert("An error occurred while adding the product.");
  } finally {
    // Remove loading class, spinner and enable button
    submitButton.classList.remove("loading");
    submitButton.disabled = false;
    submitButton.removeChild(spinner);
  }
});


  // Handle view switching
  document.getElementById("list-view-btn").addEventListener("click", function () {
    document.getElementById("product-list-view").style.display = "table";
    document.getElementById("product-grid-view").style.display = "none";
  });

  document.getElementById("grid-view-btn").addEventListener("click", function () {
    document.getElementById("product-list-view").style.display = "none";
    document.getElementById("product-grid-view").style.display = "grid";
  });

  // Handle product row clicks
  function addProductRowClickListeners() {
    document.querySelectorAll(".product-table tr").forEach((row) => {
      row.addEventListener("click", function () {
        const productId = this.getAttribute("data-id");
        const productSlug = this.getAttribute("data-slug");
        window.location.href = `/admin/preview/${productId}/${productSlug}`;
      });
    });
  }

  // Handle product card clicks
  function addProductCardClickListeners() {
    document.querySelectorAll(".product-card").forEach((card) => {
      card.addEventListener("click", function () {
        const productId = this.getAttribute("data-id");
        const productSlug = this.getAttribute("data-slug");
        window.location.href = `/admin/preview/${productId}/${productSlug}`;
      });
    });
  }

  // Handle product deletion
  function addProductDeleteListeners() {
    document.querySelectorAll(".delete-icon").forEach((icon) => {
      icon.addEventListener("click", async function (event) {
        event.stopPropagation();
        const productId = this.getAttribute("data-id");
        const confirmDelete = confirm("Are you sure you want to delete this product?");
        if (confirmDelete) {
          try {
            const response = await fetch(`/admin/products/${productId}`, {
              method: "DELETE",
              headers: {
                "Content-Type": "application/json",
              },
            });
            const data = await response.json();
            if (response.status === 200) {
              location.reload();
            } else {
              alert(data.message);
            }
          } catch (err) {
            console.error(err);
            alert("An error occurred while deleting the product.");
          }
        }
      });
    });
  }

  // Handle search input
  searchInput.addEventListener("input", async function () {
    const searchTerm = this.value;

    try {
      const response = await fetch(`/admin/products/search?q=${searchTerm}`);
      const products = await response.json();

      // Update list view
      productListBody.innerHTML = products.map((product) => `
        <tr data-id="${product._id}" data-slug="${product.slug}">
          <td><img src="${product.images[0]}" alt="Product"></td>
          <td>${product.categories[0]}</td>
          <td>${product.title}</td>
          <td>${product.brand}</td>
          <td>${product.stock}</td>
          <td>₹${product.sellingPrice}</td>
          <td>
            <div class="product-actions">
              <span style="margin-right: 0.7rem;" class="action-icon delete-icon" data-id="${product._id}"><i class="fa-regular fa-trash"></i></span>
              <span class="action-icon edit-icon" data-id="${product._id}"><i class="fa-sharp fa-regular fa-pen-to-square"></i></span>
            </div>
          </td>
        </tr>
      `).join("");

      // Update grid view
      productGridView.innerHTML = products.map((product) => `
        <div class="product-card" data-id="${product._id}" data-slug="${product.slug}">
          <img src="${product.images[0]}" alt="Product">
          <h2>${product.title}</h2>
          <div class="product-info product-category">
            <span class="label">Category:</span> <span class="value">${product.categories[0]}</span>
          </div>
          <div class="product-info product-brand">
            <span class="label">Brand:</span> <span class="value">${product.brand}</span>
          </div>
          <div class="product-info product-stock">
            <span class="label">Stock:</span> <span class="value">${product.stock}</span>
          </div>
          <div class="product-info product-price">
            <span class="label">Price:</span> <span class="value">₹${product.sellingPrice}</span>
          </div>
          <div class="product-actions">
            <span class="action-icon delete-icon" data-id="${product._id}"><i class="fa-regular fa-trash"></i></span>
            <span class="action-icon edit-icon" data-id="${product._id}"><i class="fa-sharp fa-regular fa-pen-to-square"></i></span>
          </div>
        </div>
      `).join("");

      // Add click listeners for dynamically created elements
      addProductRowClickListeners();
      addProductCardClickListeners();
      addProductDeleteListeners();

    } catch (err) {
      console.error(err);
    }
  });

  // Initial setup of click listeners for existing elements
  addProductRowClickListeners();
  addProductCardClickListeners();
  addProductDeleteListeners();

  // Prevent table headings click default behavior
  document.querySelectorAll(".product-table th").forEach((th) => {
    th.addEventListener("click", function (event) {
      event.preventDefault(); // Prevents default behavior
      event.stopPropagation(); // Stops the event from bubbling up
    });
  });
});

    </script>
  </body>
</html>
